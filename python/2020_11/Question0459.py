# 我们观察满足的字符串 S，可以分解为ssssss，这个形式，我们取前面的 n 个 s 添加到后面，会发现从第一个 s 之后，字符串中包含 n 个原始字符串 S。
# 这里我们不知道 s 的长度，但是我们可以直接拼接整个字符串到后面，然后查看新字符串中从第一个之后开始后面有几个 原始字符串，如果只有一个，说明不是满足的字符串，因为这一个就是我们添加的字符串
# 如果有多个原始字符串，就是上面的 ssss 的形式，说明是满足的字符串
#
# 0459.重复的子字符串
# [简单]
# 给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。
# 示例
# 示例 1
# 输入: "abab"
# 输出: True
# 解释: 可由子字符串 "ab" 重复两次构成。
# 示例 2
# 输入: "aba"
# 输出: False
# 示例 3
# 输入: "abcabcabcabc"
# 输出: True
# 解释: 可由子字符串 "abc" 重复四次构成。 (或者子字符串 "abcabc" 重复两次构成。)


class Solution:
    def repeatedSubstringPattern(self, s: str) -> bool:
        return not (s + s).find(s, 1) == len(s)
